{"version":3,"sources":["webpack:///./ClientApp/$_lazy_route_resource lazy namespace object","webpack:///./ClientApp/app/ParkingLijst/ParkingList.Component.css","webpack:///./ClientApp/app/ParkingLijst/ParkingList.component.ts","webpack:///./ClientApp/app/ParkingLijst/parkingList.component.html","webpack:///./ClientApp/app/app.component.html","webpack:///./ClientApp/app/app.component.ts","webpack:///./ClientApp/app/app.module.ts","webpack:///./ClientApp/app/shared/dataService.ts","webpack:///./ClientApp/environments/environment.ts","webpack:///./ClientApp/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./ClientApp/$$_lazy_route_resource lazy recursive\";","module.exports = \"div.parking.header{\\r\\n    font-size: large;\\r\\n}\\r\\n\\r\\ndiv.parking{\\r\\n    margin-top : 10px;\\r\\n}\\r\\n\\r\\n.table{\\r\\n    margin-top: 10px;\\r\\n}\\r\\n\\r\\n.tableparkinginfo{\\r\\n    padding : 1px;\\r\\n    font-size: 16px;\\r\\n}\\r\\n\"","ï»¿import { Component, OnInit } from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\nimport { IParking } from \"../shared/IParking\";\r\nimport { Parking } from \"../shared/Parking\";\r\n\r\n@Component({\r\n    selector: \"parking-list\",\r\n  templateUrl : \"parkingList.component.html\",\r\n    styleUrls: [\"ParkingList.Component.css\"] //styles aangepast naar styleUrls\r\n})\r\n\r\nexport class ParkingList implements OnInit {\r\n    PageTitle: string = 'Lijst Parkings';\r\n    backGroundColor: string;\r\n    public parkings: IParking[] = [];\r\n   \r\n\r\n    ngOnInit(): void {\r\n        this.data.loadParkings()\r\n            .subscribe(succes => {\r\n                if (succes) {\r\n                    this.parkings = this.data.parkings;\r\n                    this.filteredParkings = this.parkings;\r\n               \r\n                }\r\n            });\r\n    }\r\n   \r\n\r\n    _ListFilter : string;\r\n    get listFilter(): string\r\n    {\r\n        return this._ListFilter;\r\n    }\r\n    set listFilter(value: string)\r\n    {\r\n        this._ListFilter = value;\r\n        this.filteredParkings = this.listFilter ? this.perFormFilter(this.listFilter) : this.parkings;\r\n    }\r\n\r\n    filteredParkings: IParking[] = this.parkings;\r\n\r\n    constructor(private data: DataService) { } \r\n\r\n\r\n\r\n    perFormFilter(filterBy: string): IParking[]\r\n    {\r\n        filterBy = filterBy.toLocaleLowerCase();\r\n        return this.parkings.filter((parking: IParking) =>\r\n            parking.parkingNaam.toLocaleLowerCase().indexOf(filterBy) !== -1 ||\r\n            parking.landLandNaam.toLocaleLowerCase().indexOf(filterBy) !== -1||\r\n            parking.gemeenteGemeenteNaam.toLocaleLowerCase().indexOf(filterBy) !== -1 ||\r\n            parking.locatieStraat.toLocaleLowerCase().indexOf(filterBy) !== -1 ||\r\n            parking.soortSoortNaam.toLocaleLowerCase().indexOf(filterBy) !== -1);\r\n    }\r\n\r\n    //percentage : number = ((parking: Parking) =>\r\n    //    (parking.bezet / parking.totaal) * 100);\r\n\r\n    //percentage(): Number{\r\n    //    return 52\r\n        \r\n    //    //return this.parkings.entries((parking: Parking) =>\r\n    //    //    (parking.bezet / parking.totaal) * 100);\r\n\r\n    //}\r\n\r\n    //getColor(percentage) {\r\n    //    switch (percentage) {\r\n    //        case percentage >= 50:\r\n    //            return 'green';\r\n    //        case percentage <= 51 && percentage >= 75:\r\n    //            return 'yellow';\r\n    //        case percentage <= 76 && percentage >= 90:\r\n    //            return \"orange\";\r\n    //        case percentage <= 91 && percentage >= 99:\r\n    //            return \"Light-red\";\r\n    //        case percentage = 100:\r\n    //            return \"Dark-Red\";\r\n    //        case percentage < 100:\r\n    //            return \"Black\";\r\n\r\n\r\n    //    }\r\n    //}\r\n\r\n}\r\n\r\n","module.exports = \"<div class=\\\"parking\\\">\\r\\n    <div class=\\\"parking.header\\\">\\r\\n        {{PageTitle}}\\r\\n    </div>\\r\\n    <div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-2\\\">Zoeken: </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"listFilter\\\" />\\r\\n            </div>\\r\\n        </div>   \\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h4>Filterd door: {{listFilter}}</h4>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table\\\" *ngIf='parkings && parkings.length > 0'>\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>Parkingnaam: </th>\\r\\n                        <th> Land: </th>\\r\\n                        <th> Gemeente: </th>\\r\\n                        <th>Straat: </th>\\r\\n                        <th>Nummer: </th>\\r\\n                        <th>Soort: </th>\\r\\n                        <th>Bezet: </th>\\r\\n                        <th> Aantal: </th>\\r\\n                        <th>Vrije plaatsen: </th>\\r\\n                        <th>Percentage bezet:</th>\\r\\n                       \\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr class=\\\"tableparkinginfo\\\" *ngFor=\\\"let p of filteredParkings\\\">\\r\\n                        <td>{{p.parkingNaam}} </td>\\r\\n                        <td>{{p.landLandNaam}}</td>\\r\\n                        <td>{{p.gemeenteGemeenteNaam}}</td>\\r\\n                        <td>{{p.locatieStraat}}</td>\\r\\n                        <td>{{p.locatieNummer}}</td>\\r\\n                        <td>{{p.soortSoortNaam}}</td>\\r\\n                        <td ng-model=\\\"bezet\\\">{{p.bezet}}</td>\\r\\n                        <td ng-model=\\\"Totaal\\\">{{p.totaal}}</td>\\r\\n                        <td>{{ p.totaal - p.bezet }}</td>\\r\\n                        <td>{{(p.bezet / p.totaal)*100}} %</td>\\r\\n                        \\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"col-md-10\\\">\\r\\n<parking-list></parking-list>\\r\\n</div>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'the-parkings',\r\n    templateUrl: './app.component.html',\r\n    styles: []\r\n})\r\nexport class AppComponent {\r\n    ParkingNaam = 'Amaai wat een mooi doolhof. Deze tekst komt uit: app.component.ts';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from \"@angular/common/http\"; //////////////\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { AppComponent } from './app.component';\r\nimport { ParkingList } from \"./ParkingLijst/ParkingList.component\";\r\nimport { DataService } from './shared/dataService';\r\n\r\n@NgModule({\r\n  declarations: [\r\n      AppComponent,\r\n      ParkingList\r\n  ],\r\n  imports: [\r\n      BrowserModule,\r\n      FormsModule,\r\n      HttpClientModule /////////////////////:\r\n  ],\r\n    providers: [\r\n        DataService\r\n    ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","ï»¿import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport 'rxjs/add/operator/map';\r\nimport { IParking } from \"./IParking\";\r\nimport { Parking } from \"./Parking\";\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public parkings : IParking[]/* type safety typing*/ = [] /*signing*/;\r\n\r\n    loadParkings():Observable<boolean> {\r\n        return this.http.get(\"/api/parkings\") // hier de weg naar de apiom parkings op te halen\r\n            .map((data: any[]) => {\r\n                this.parkings = data;\r\n                return true;\r\n            });\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}