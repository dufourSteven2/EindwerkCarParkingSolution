{"version":3,"sources":["webpack:///./ClientApp/$_lazy_route_resource lazy namespace object","webpack:///./ClientApp/app/ParkingLijst/ParkingList.component.ts","webpack:///./ClientApp/app/ParkingLijst/parkingList.component.html","webpack:///./ClientApp/app/app.component.html","webpack:///./ClientApp/app/app.component.ts","webpack:///./ClientApp/app/app.module.ts","webpack:///./ClientApp/environments/environment.ts","webpack:///./ClientApp/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,kF;;;;;;;;;;;;;;;;;;;;;ACZ2C;AAS3C;IANA;QAOW,aAAQ,GAAG;YACd;gBACI,IAAI,EAAG,OAAO;gBACd,MAAM,EAAG,QAAQ;aACpB;YACD;gBACI,IAAI,EAAE,QAAQ;gBACd,MAAM,EAAE,QAAQ;aACnB;YACD;gBACI,IAAI,EAAE,SAAS;gBACf,MAAM,EAAE,QAAQ;aACnB;SACJ,CAAC;IACN,CAAC;IAfY,WAAW;QANvB,+DAAS,CAAC;YACP,QAAQ,EAAE,cAAc;;YAGxB,MAAM,EAAE,EAAE;SACb,CAAC;OACW,WAAW,CAevB;IAAD,kBAAC;CAAA;AAfuB;;;;;;;;;;;;ACTxB,uFAAuF,QAAQ,mB;;;;;;;;;;;ACA/F,uGAAuG,OAAO,+C;;;;;;;;;;;;;;;;;;;;;ACApE;AAM1C;IAJA;QAKI,UAAK,GAAG,KAAK,CAAC;IAClB,CAAC;IAFY,YAAY;QAJxB,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;SAE3B,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;ACNiC;AACjB;AAEM;AACoB;AAanE;IAAA;IAAyB,CAAC;IAAb,SAAS;QAXrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACV,2DAAY;gBACZ,+EAAW;aACd;YACD,OAAO,EAAE;gBACP,uEAAa;aACd;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;ACjBtB;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./ClientApp/$$_lazy_route_resource lazy recursive\";","ï»¿import { Component } from \"@angular/core\";\r\nimport { templateJitUrl } from \"@angular/compiler\";\r\n\r\n@Component({\r\n    selector: \"parking-list\",\r\n  //  template: \"<div>test parkinglijst</div>\",\r\n   templateUrl : \"parkingList.component.html\",\r\n    styles: []\r\n})\r\nexport class ParkingList {\r\n    public parkings = [\r\n        {\r\n            name : \"benny\",\r\n            plaats : \"brugge\"\r\n        },\r\n        {\r\n            name: \"Steven\",\r\n            plaats: \"brugge\"\r\n        },\r\n        {\r\n            name: \"William\",\r\n            plaats: \"brugge\"\r\n        }\r\n    ];\r\n}","module.exports = \"\\r\\n<div> het werkt</div>\\r\\n\\r\\n<div *ngFor=\\\"let p of parkings\\\">{{p.name}}</div>\\r\\n\\r\\n\\r\\n\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n\\r\\n\\r\\n<h1>{{Title}}</h1>\\r\\n<parking-list></parking-list>\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'CarParkingList',\r\n  templateUrl:'./app.component.html'\r\n})\r\nexport class AppComponent {\r\n    Title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ParkingList } from \"./ParkingLijst/ParkingList.component\";\n\n@NgModule({\n  declarations: [\n      AppComponent,\n      ParkingList\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}